services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=khawley1231@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"

  # nginx:
  #   image: nginx:alpine
  #   container_name: "nginx"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nginx.rule=Host(`snoozingfish.com`)"
  #     - "traefik.http.routers.nginx.entrypoints=websecure"
  #     - "traefik.http.routers.nginx.tls.certresolver=myresolver"
  #   volumes:
  #     - ./src:/usr/share/nginx/html

  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "flask-app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask-app.rule=Host(`snoozingfish.com`)"
      - "traefik.http.routers.flask-app.entrypoints=websecure"
      - "traefik.http.routers.flask-app.tls.certresolver=myresolver"
    ports:
      - 5000:5000
    volumes:
      - ./src:/app
      - ~/scripts/nl-rentals/listings.db:/app/listings.db
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
